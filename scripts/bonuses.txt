//----- Variables -----------------------------------------------------------------------------------------------------

bonus.id = 1
BONUS.SIZE = 60
clone.type = 0
clone? = 0
effect.counter = 0
TYPE.BONUS = 0
TYPE.DESTROYED = 2
TYPE.EFFECT = 1



//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(hide effects)
{
    If ((clone? == 1) And (Not ((clone.type == TYPE.BONUS))))
    {
        Looks.Hide();
    }
}

WhenBroadcastReceived(initialise)
{
    clone? = 0;
    Looks.Hide();
    TYPE.BONUS = 0;
    TYPE.EFFECT = 1;
    TYPE.DESTROYED = 2;
    BONUS.SIZE = 60;
    BONUS.+1 BALL = 1;
    BONUS.x2 DAMAGE = 2;
    BONUS.POWER UP = 3;
}

WhenBroadcastReceived(raise row by three pixels)
{
    If (clone? == 1)
    {
        If (clone.type == TYPE.BONUS)
        {
            List.ReplaceItem(Bonus.y, bonus.id, (Bonus.y[bonus.id] + 3));
        }
    }
}

WhenBroadcastReceived(remove sprites)
{
    Repeat (20)
    {
        Looks.ChangeEffectBy(GHOST, 5);
    }
    Control.DeleteThisClone();
}

WhenBroadcastReceived(reset game)
{
    List.DeleteAll(Bonus.x);
    List.DeleteAll(Bonus.y);
    List.DeleteAll(Bonus.hit?);
    List.DeleteAll(Bonus.type);
    List.DeleteAll(Bonus.hits remaining);
}

WhenBroadcastReceived(update hits on objects)
{
    If (clone? == 1)
    {
        If (clone.type == TYPE.BONUS)
        {
            If (Bonus.hit?[bonus.id] == 1)
            {
                effect.counter = 0;
                If (Bonus.hits remaining[bonus.id] > 0)
                {
                    clone.type = TYPE.EFFECT;
                    Control.CreateCloneOf(_myself_);
                    clone.type = TYPE.BONUS;
                }
                Else
                {
                    Costume.GoToFrontBack(back);
                    clone.type = TYPE.DESTROYED;
                }
                List.ReplaceItem(Bonus.hit?, bonus.id, 0);
            }
        }
        Else
        {
            Looks.Show();
        }
    }
}

WhenBroadcastReceived(update object positions)
{
    If (clone? == 1)
    {
        If (clone.type == TYPE.BONUS)
        {
            Looks.SetSizeTo(1000);
            Motion.GoToXY(Bonus.x[bonus.id], Bonus.y[bonus.id]);
            Looks.SetSizeTo(BONUS.SIZE);
            If (Bonus.y[bonus.id] > 115)
            {
                Looks.SetEffectTo(GHOST, ((Bonus.y[bonus.id] - 115) * 2.5));
                If (((Bonus.y[bonus.id] - 115) * 2.5) > 100)
                {
                    List.ReplaceItem(Bonus.hits remaining, bonus.id, 0);
                    Control.DeleteThisClone();
                }
            }
        }
    }
}

WhenBroadcastReceived(update objects appearence)
{
    If (clone? == 1)
    {
        If (clone.type == TYPE.EFFECT)
        {
            Looks.ChengeSizeBy(4);
            Looks.ChangeEffectBy(GHOST, 8);
            effect.counter += 1;
            If (effect.counter > 10)
            {
                Control.DeleteThisClone();
            }
        }
        Else
        {
            If (clone.type == TYPE.DESTROYED)
            {
                Looks.ChengeSizeBy(10);
                Looks.ChangeEffectBy(GHOST, 4);
                effect.counter += 1;
                If (effect.counter > 24)
                {
                    Control.DeleteThisClone();
                }
            }
            Else
            {
                If (Costume.GetNumberName(number) == BONUS.POWER UP)
                {
                    Looks.SetSizeTo((BONUS.SIZE + (4 * cos(((29 * bonus.id) + (Sensing.Timer() * 200))))));
                    Motion.TurnRight(1);
                }
            }
        }
    }
}


//----- Start as clone ------------------------------------------------------------------------------------------------

Control.WhenIStartAsClone()
{
    clone? = 1;
    If (clone.type == TYPE.BONUS)
    {
        Call add obstacle;
    }
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define add obstacle (warp=true)
{
    Looks.ClearGraphicEffects();
    Looks.SwitchCostumeTo(Operator.Random(1 / 3));
    Motion.PointInDirection(90);
    Looks.SetSizeTo(1000);
    Motion.GoToXY(NewRow.BonusData[1], -200);
    List.DeleteItem(NewRow.BonusData, 1);
    Looks.SetSizeTo(BONUS.SIZE);
    Looks.Show();
    List.Add(Bonus.x, Motion.XPosition());
    List.Add(Bonus.y, Motion.YPosition());
    List.Add(Bonus.hit?, 0);
    List.Add(Bonus.hits remaining, 1);
    List.Add(Bonus.type, Costume.GetNumberName(number));
    bonus.id = List.Length(Bonus.hit?);
}


//----- Costumes ------------------------------------------------------------------------------------------------------

+1 ball.svg
power.svg
x2 damage.svg


//----- Sounds --------------------------------------------------------------------------------------------------------

pop.wav
