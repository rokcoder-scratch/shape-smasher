//----- Variables -----------------------------------------------------------------------------------------------------

BAR.BASE = 0
clone? = 0
POINTS PER SECTION = 1
SECTION HEIGHT = 42
selected bar = 0
type = 1
TYPE.BAR = 2
TYPE.METER = 1



//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(initialise)
{
    clone? = 0;
    TYPE.METER = 1;
    TYPE.BAR = 2;
    SECTION HEIGHT = 42;
    BAR.BASE = 0;
    POINTS PER SECTION = 1;
    Costume.GoToFrontBack(front);
    Looks.Hide();
    Looks.ClearGraphicEffects();
    type = TYPE.BAR;
    Looks.SwitchCostumeTo(dot);
    Looks.SetSizeTo(1000);
    Motion.GoToXY(SCREEN.X.OFFSET, BAR.BASE);
    Looks.SetSizeTo(100);
    Looks.SwitchCostumeTo(bar);
    Control.CreateCloneOf(_myself_);
    type = TYPE.METER;
    Looks.SwitchCostumeTo(meter);
    Motion.GoToXY(SCREEN.X.OFFSET, 0);
    Control.CreateCloneOf(_myself_);
}

WhenBroadcastReceived(reset game)
{
    If (clone? == 0)
    {
        Call //TODO("Set to zero");
        Power = 9;
    }
}

WhenBroadcastReceived(update objects appearence)
{
    If (clone? == 1)
    {
        If (type == TYPE.BAR)
        {
            If (Selected activatable > 0)
            {
                selected bar = (Power - Selected activatable);
            }
            Else
            {
                selected bar = (Power - Hovered activatable);
            }
            Hovered activatable = 0;
            Looks.SwitchCostumeTo(dot);
            Looks.SetSizeTo(1000);
            If (Motion.YPosition() < (BAR.BASE + (selected bar * SECTION HEIGHT)))
            {
                Motion.ChangeYBy(16);
                If (Motion.YPosition() > (BAR.BASE + (selected bar * SECTION HEIGHT)))
                {
                    Motion.SetY((BAR.BASE + (selected bar * SECTION HEIGHT)));
                }
            }
            Else
            {
                If (Motion.YPosition() > (BAR.BASE + (selected bar * SECTION HEIGHT)))
                {
                    Motion.ChangeYBy(-16);
                    If (Motion.YPosition() < (BAR.BASE + (selected bar * SECTION HEIGHT)))
                    {
                        Motion.SetY((BAR.BASE + (selected bar * SECTION HEIGHT)));
                    }
                }
            }
            Looks.SetSizeTo(100);
            Looks.SwitchCostumeTo(bar);
        }
    }
}


//----- Start as clone ------------------------------------------------------------------------------------------------

Control.WhenIStartAsClone()
{
    clone? = 1;
    Looks.Show();
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define //TODO(string comment) (warp=false)
{
}


//----- Costumes ------------------------------------------------------------------------------------------------------

bar.svg
dot.svg
meter.svg


//----- Sounds --------------------------------------------------------------------------------------------------------

pop.wav
