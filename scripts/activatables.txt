//----- Variables -----------------------------------------------------------------------------------------------------

brightness = -100
brightness.target = -100
clone? = 0
ghost = 50
ghost.target = 50
targetting? = 0



//----- Sprite clicked events -----------------------------------------------------------------------------------------

WhenThisSpriteClicked()
{
    If (targetting? == 1)
    {
        If (Costume.GetNumberName(number) > Power)
        {
        }
        Else
        {
            If (Selected activatable == Costume.GetNumberName(number))
            {
                Sound.Play(cancel);
                Selected activatable = 0;
            }
            Else
            {
                Sound.Play(click);
                Selected activatable = Costume.GetNumberName(number);
            }
        }
    }
}


//----- Broadcast received events -------------------------------------------------------------------------------------

WhenBroadcastReceived(hide activatables)
{
    targetting? = 0;
}

WhenBroadcastReceived(initialise)
{
    clone? = 0;
    Looks.Hide();
    ghost = 50;
    brightness = -100;
    ghost.target = ghost;
    brightness.target = brightness;
    Looks.SetEffectTo(GHOST, ghost);
    Looks.SetEffectTo(BRIGHTNESS, brightness);
    Looks.SetSizeTo(50);
    POWERUP.GROW = 1;
    POWERUP.POLYUP = 2;
    POWERUP.BOUNCEFLOOR = 3;
    POWERUP.SCATTER = 4;
    POWERUP.QUADDAMAGE = 5;
    POWERUP.FREEZE = 6;
    POWERUP.MULTIBALL = 7;
    POWERUP.FIRE = 8;
    POWERUP.BOOM = 9;
    targetting? = 0;
    Call create icons;
}

WhenBroadcastReceived(reset activatables)
{
    Power += ( - Selected activatable);
    Selected activatable = 0;
    Hovered activatable = 0;
}

WhenBroadcastReceived(show available activatables)
{
    Selected activatable = 0;
    Hovered activatable = 0;
    targetting? = 1;
}

WhenBroadcastReceived(update objects appearence)
{
    If (clone? == 1)
    {
        If (targetting? == 1)
        {
            brightness.target = ((Costume.GetNumberName(number) > Power) * -100);
            If (Sensing.TouchingObject(_mouse_) And (Not ((Costume.GetNumberName(number) > Power))))
            {
                Hovered activatable = Costume.GetNumberName(number);
            }
            ghost.target = 50;
            If (Costume.GetNumberName(number) == Selected activatable)
            {
                ghost.target = 0;
            }
            Else
            {
                If (Sensing.TouchingObject(_mouse_) And (Not ((Costume.GetNumberName(number) > Power))))
                {
                    ghost.target = 20;
                }
            }
        }
        Else
        {
            brightness.target = ((Costume.GetNumberName(number) > (Power - Selected activatable)) * -100);
            If (Costume.GetNumberName(number) == Selected activatable)
            {
                ghost.target = 0;
                brightness.target = 0;
            }
            Else
            {
                ghost.target = 50;
            }
        }
        If (ghost > ghost.target)
        {
            ghost += -5;
        }
        Else
        {
            If (ghost < ghost.target)
            {
                ghost += 10;
                If (ghost > ghost.target)
                {
                    ghost = ghost.target;
                }
            }
        }
        Looks.SetEffectTo(GHOST, ghost);
        If (brightness > brightness.target)
        {
            brightness += -5;
        }
        Else
        {
            If (brightness < brightness.target)
            {
                brightness += 5;
            }
        }
        Looks.SetEffectTo(BRIGHTNESS, brightness);
    }
}


//----- Start as clone ------------------------------------------------------------------------------------------------

Control.WhenIStartAsClone()
{
    Looks.Show();
    clone? = 1;
}


//----- Custom blocks -------------------------------------------------------------------------------------------------

Define //TODO(string comment) (warp=true)
{
}

Define create icons (warp=true)
{
    Costume.GoToFrontBack(front);
    Looks.SwitchCostumeTo(grow);
    Repeat (9)
    {
        Motion.SetX((134 + (((Costume.GetNumberName(number) - 1) % 3) * 42)));
        Motion.SetY((158 - (floor(((Costume.GetNumberName(number) - 1) / 3)) * 42)));
        Control.CreateCloneOf(_myself_);
        Looks.NextCostume();
    }
}


//----- Costumes ------------------------------------------------------------------------------------------------------

boom.svg
bounce-floor.svg
fire.svg
freeze.svg
grow.svg
multiball.svg
poly-up.svg
quad-damage.svg
scatter.svg


//----- Sounds --------------------------------------------------------------------------------------------------------

cancel.mp3
click.mp3
